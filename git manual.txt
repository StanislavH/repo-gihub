cd C:/Users/user/my_project
git init
git add *.c
git add LICENSE
git commit -m 'Initial project version'
git remote add pb https://github.com/paulboone/ticgit
git remote -v

git clone https://github.com/libgit2/libgit2
git clone https://github.com/libgit2/libgit2 mylibgit




git status
git add <file>
git commit
git commit -m 'commit message'


.gitkeep - сохраняет пустые директории - добавлять этот файл в дирректории

.gitignore - Создать файл в корне и записывать имена игнорируемых файлов


Истории - ничего не удаляется(лучше не выходить из редакторов)
git log - история коммитов 
git reset <hash> - удалить коммит(восстановить коммит)
git reflog - история всех операций в репозитории
git revert - создает новый коммит с отменой изменений
git restore - сброс состояния файла на указанное 

Создание веток - Изоляция своих изменений от общих
git branch - просмотр веток
git branch dev - создать ветку dev
git branch dev master - создать ветку dev на основе ветки master
git checkout dev - переключиться на ветку dev
git checkout -b dev-test - создает и переходит-b
git branch -d branches_names - удалить ветки

Клонирование
git clone git@github.com:user_name/project_name.git name_on_disk
git push -u origin name_branch		- загрузить локальные измения вудаленный репо
git pull 							- скачать изменения репозитория на текущей ветке
git fetch 							- обновить данные  

Слияние веток
git merge dev - слить изменения в ветку мастер
git push	- выгрузить
git push --delete master-branch-name branches_names - удалить ветки в удаленном репозитории
git rebase master-branch-name - сместить базу текущей ветки на последний комит указанной ветки
git push --force	- выгрузить